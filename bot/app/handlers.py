from aiogram import F, Router
from aiogram.types import Message, FSInputFile, ReplyKeyboardRemove
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

import bot.app.database.requests as rq
from bot.app.gpt.gpt_handler import get_chatgpt_response
from bot.app.keyboards import get_main_keyboard

router = Router()


class Interview(StatesGroup):
    question1 = State()
    question2 = State()
    question3 = State()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await rq.set_user(message.from_user.id)

    photo = FSInputFile(r"app/files/img_1.png")

    await message.answer_photo(
        photo=photo,
        caption=(
            "–ü—Ä–∏–≤–µ—Ç! –Ø **Fufig**, –≤–∞—à –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. üòä\n\n"
            "–Ø –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤–∞–º –≤—Å–µ –æ **Latoken**, –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–Ω—Ç–µ—Ä–≤—å—é, –∞ —Ç–∞–∫–∂–µ –æ –Ω–∞—à–µ–º —Ö–∞–∫–∞—Ç–æ–Ω–µ. "
            "–ü–æ—Å–ª–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —è –∑–∞–¥–∞–º –≤–∞–º 3 –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –Ω–∞–π–º–µ. "
            "–ì–æ—Ç–æ–≤—ã? –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!\n\n"
            "–ñ–¥—É –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤! üëã"
        ),
        parse_mode="Markdown",
        reply_markup=get_main_keyboard()
    )


@router.message(F.text == "üî• –ì–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞! üî•")
async def start_questions(message: Message, state: FSMContext):
    await state.set_state(Interview.question1)
    photo = FSInputFile(r"app/files/img_1.png")

    await message.answer_photo(
        photo=photo,
        caption=(
            "–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n"
            "**–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å:**\n\n"
            "**1. –ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Latoken?** ü§î\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. "
            "–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∏—Å—Å–∏—è, –∫—É–ª—å—Ç—É—Ä–∞, –ø—Ä–æ–¥—É–∫—Ç—ã –∏–ª–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. "
            "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –º–æ—Ç–∏–≤–∞–º–∏ –∏ –æ–∂–∏–¥–∞–Ω–∏—è–º–∏!"
        ),
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardRemove()
    )


@router.message(Interview.question1)
async def answer_question1(message: Message, state: FSMContext):
    await rq.save_user_answer(message.from_user.id, message.text, 1)
    await state.set_state(Interview.question2)
    photo = FSInputFile(r"app/files/img_4.png")

    await message.answer_photo(
        photo=photo,
        caption=(
            "–û—Ç–ª–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç! –¢–µ–ø–µ—Ä—å –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å:\n\n"
            "**2. –ö–∞–∫–∏–µ —É –≤–∞—Å —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã?** üí™\n\n"
            "–û–ø–∏—à–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –≤–∞–º –≤ —Ä–∞–±–æ—Ç–µ. "
            "–≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, —É–º–µ–Ω–∏–µ —Ä–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ —Ä–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ."
        ),
        parse_mode="Markdown"
    )


@router.message(Interview.question2)
async def answer_question2(message: Message, state: FSMContext):
    await rq.save_user_answer(message.from_user.id, message.text, 2)
    await state.set_state(Interview.question3)
    photo = FSInputFile(r"app/files/img_3.png")

    await message.answer_photo(
        photo=photo,
        caption=(
            "–û—Ç–ª–∏—á–Ω–æ! –ò –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å:\n\n"
            "**3. –ì–¥–µ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–µ–±—è —á–µ—Ä–µ–∑ 5 –ª–µ—Ç?** üöÄ\n\n"
            "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏ –∏ –∞–º–±–∏—Ü–∏—è–º–∏. "
            "–ö–∞–∫ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å? "
            "–ö–∞–∫–∏–µ –Ω–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å, –∫–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å?"
        ),
        parse_mode="Markdown"
    )


@router.message(Interview.question3)
async def answer_question3(message: Message, state: FSMContext):
    await rq.save_user_answer(message.from_user.id, message.text, 3)
    photo = FSInputFile(r"app/files/img_2.png")

    await message.answer_photo(
        photo=photo,
        caption=(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã! üéâ\n\n"
            "–ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏—Ö –∏–∑—É—á–∏–º –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. "
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å! üòä"
        ),
        parse_mode="Markdown"
    )
    await state.clear()


@router.message(F.text)
async def handle_text_message(message: Message):
    flag, chatgpt_response = await get_chatgpt_response(message.text)
    if flag:
        await rq.add_message(tg_id=message.from_user.id, message=message.text, response=chatgpt_response)
    else:
        await rq.add_message(tg_id=message.from_user.id, message=message.text, response=None)
    await message.answer(chatgpt_response)


@router.message()
async def handle_unknown_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –≤ —Å—Ç–∏–ª–µ Fufig"""
    await message.answer(
        "–û–π-–æ–π! üò≤ –Ø –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–∞–∫–∏–º —Ç–∏–ø–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π... "
        "–ù–æ —è —É—á—É—Å—å! üìö\n\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º ‚Äì —Ç–∞–∫ –º–Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –≤–∞–º –ø–æ–º–æ—á—å. üòä"
    )
